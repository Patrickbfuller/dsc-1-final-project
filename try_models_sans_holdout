{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt\n",
    "from feat_to_model_eval import feat_to_model_kfold_eval"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('df_train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>...</th>\n",
       "      <th>zip_98146</th>\n",
       "      <th>zip_98148</th>\n",
       "      <th>zip_98155</th>\n",
       "      <th>zip_98166</th>\n",
       "      <th>zip_98168</th>\n",
       "      <th>zip_98177</th>\n",
       "      <th>zip_98178</th>\n",
       "      <th>zip_98188</th>\n",
       "      <th>zip_98198</th>\n",
       "      <th>zip_98199</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1451</td>\n",
       "      <td>235867.0</td>\n",
       "      <td>4</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1330</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9683</td>\n",
       "      <td>255000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1490</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21177</td>\n",
       "      <td>570000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>3.25</td>\n",
       "      <td>1550</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4893</td>\n",
       "      <td>245000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>990</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9457</td>\n",
       "      <td>600000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 88 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0     price  bedrooms  bathrooms  sqft_living  floors  waterfront  \\\n",
       "0        1451  235867.0         4       2.00         1330     1.0         NaN   \n",
       "1        9683  255000.0         3       1.50         1490     1.0         0.0   \n",
       "2       21177  570000.0         3       3.25         1550     2.0         0.0   \n",
       "3        4893  245000.0         2       1.00          990     1.0         0.0   \n",
       "4        9457  600000.0         2       1.00         1180     1.0         0.0   \n",
       "\n",
       "   view  condition  grade    ...      zip_98146  zip_98148  zip_98155  \\\n",
       "0   0.0          4      5    ...              0          0          0   \n",
       "1   0.0          4      6    ...              0          0          0   \n",
       "2   0.0          3      9    ...              0          0          0   \n",
       "3   0.0          3      6    ...              0          0          0   \n",
       "4   1.0          3      7    ...              0          0          0   \n",
       "\n",
       "   zip_98166  zip_98168  zip_98177  zip_98178  zip_98188  zip_98198  zip_98199  \n",
       "0          0          0          0          0          0          0          0  \n",
       "1          1          0          0          0          0          0          0  \n",
       "2          0          0          0          0          0          0          1  \n",
       "3          0          0          0          0          0          0          0  \n",
       "4          0          0          0          0          0          0          0  \n",
       "\n",
       "[5 rows x 88 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'price', 'bedrooms', 'bathrooms', 'sqft_living', 'floors',\n",
       "       'waterfront', 'view', 'condition', 'grade', 'yr_built', 'yr_renovated',\n",
       "       'zipcode', 'sqft_living15', 'log_price', 'log_sqft_living',\n",
       "       'log_sqft_living15', 'log_grade', 'zip_98001', 'zip_98002', 'zip_98003',\n",
       "       'zip_98004', 'zip_98005', 'zip_98006', 'zip_98007', 'zip_98008',\n",
       "       'zip_98010', 'zip_98011', 'zip_98014', 'zip_98019', 'zip_98022',\n",
       "       'zip_98023', 'zip_98024', 'zip_98027', 'zip_98028', 'zip_98029',\n",
       "       'zip_98030', 'zip_98031', 'zip_98032', 'zip_98033', 'zip_98034',\n",
       "       'zip_98038', 'zip_98039', 'zip_98040', 'zip_98042', 'zip_98045',\n",
       "       'zip_98052', 'zip_98053', 'zip_98055', 'zip_98056', 'zip_98058',\n",
       "       'zip_98059', 'zip_98065', 'zip_98070', 'zip_98072', 'zip_98074',\n",
       "       'zip_98075', 'zip_98077', 'zip_98092', 'zip_98102', 'zip_98103',\n",
       "       'zip_98105', 'zip_98106', 'zip_98107', 'zip_98108', 'zip_98109',\n",
       "       'zip_98112', 'zip_98115', 'zip_98116', 'zip_98117', 'zip_98118',\n",
       "       'zip_98119', 'zip_98122', 'zip_98125', 'zip_98126', 'zip_98133',\n",
       "       'zip_98136', 'zip_98144', 'zip_98146', 'zip_98148', 'zip_98155',\n",
       "       'zip_98166', 'zip_98168', 'zip_98177', 'zip_98178', 'zip_98188',\n",
       "       'zip_98198', 'zip_98199'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.499</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.499</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   9141.</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 19 Apr 2019</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>10:56:35</td>     <th>  Log-Likelihood:    </th> <td>-2.5466e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 18357</td>      <th>  AIC:               </th>  <td>5.093e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 18354</td>      <th>  BIC:               </th>  <td>5.093e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>     <td>-9.857e+04</td> <td> 5812.681</td> <td>  -16.957</td> <td> 0.000</td> <td> -1.1e+05</td> <td>-8.72e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>   <td>  235.8674</td> <td>    3.189</td> <td>   73.970</td> <td> 0.000</td> <td>  229.617</td> <td>  242.118</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th> <td>   74.1689</td> <td>    4.252</td> <td>   17.444</td> <td> 0.000</td> <td>   65.835</td> <td>   82.503</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>12896.482</td> <th>  Durbin-Watson:     </th>  <td>   1.992</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>524825.770</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 2.890</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td>28.549</td>   <th>  Cond. No.          </th>  <td>9.42e+03</td> \n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 9.42e+03. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                  price   R-squared:                       0.499\n",
       "Model:                            OLS   Adj. R-squared:                  0.499\n",
       "Method:                 Least Squares   F-statistic:                     9141.\n",
       "Date:                Fri, 19 Apr 2019   Prob (F-statistic):               0.00\n",
       "Time:                        10:56:35   Log-Likelihood:            -2.5466e+05\n",
       "No. Observations:               18357   AIC:                         5.093e+05\n",
       "Df Residuals:                   18354   BIC:                         5.093e+05\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================\n",
       "                    coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------\n",
       "Intercept     -9.857e+04   5812.681    -16.957      0.000    -1.1e+05   -8.72e+04\n",
       "sqft_living     235.8674      3.189     73.970      0.000     229.617     242.118\n",
       "sqft_living15    74.1689      4.252     17.444      0.000      65.835      82.503\n",
       "==============================================================================\n",
       "Omnibus:                    12896.482   Durbin-Watson:                   1.992\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           524825.770\n",
       "Skew:                           2.890   Prob(JB):                         0.00\n",
       "Kurtosis:                      28.549   Cond. No.                     9.42e+03\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 9.42e+03. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 256423.4335095438\n",
      "MAE: 171180.2376624933\n",
      "\n"
     ]
    }
   ],
   "source": [
    "line, resids, rmse, mae, pvals = feat_to_model_kfold_eval(\n",
    "                        'price', predictors=['sqft_living', 'sqft_living15'], df=df, \n",
    "                         kvals=[5,10,20], show_summary=True, MAE=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'how far off the model estimated')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(df.price, resids[:len(df)], alpha=0.3)\n",
    "plt.xlabel('price of home')\n",
    "plt.ylabel('how far off the model estimated')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'how far off the model estimated')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(df.price, resids[len(df):2*len(df)], c='green', alpha=0.3)\n",
    "plt.xlabel('price of home')\n",
    "plt.ylabel('how far off the model estimated')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 279531.43070191453\n",
      "MAE: 161326.9488841677\n",
      "\n"
     ]
    }
   ],
   "source": [
    "zip_cols = df.loc[:,'zip_98001':].columns\n",
    "zip_predictors = list(zip_cols)\n",
    "\n",
    "feat_to_model_kfold_eval('price', predictors= zip_predictors, df=df, \n",
    "                         kvals=[5,10,20], MAE=True, return_items=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 169273.94648362268\n",
      "MAE: 85700.73229282386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predictors = ['log_sqft_living', 'log_sqft_living', 'log_grade'] + zip_predictors\n",
    "feat_to_model_kfold_eval('log_price', predictors, df, \n",
    "                        kvals=[5, 10, 20], price_logged=True, MAE=True, return_items=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>log_price</td>    <th>  R-squared:         </th> <td>   0.841</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.840</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1338.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 19 Apr 2019</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>10:56:41</td>     <th>  Log-Likelihood:    </th> <td>  2664.0</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 18357</td>      <th>  AIC:               </th> <td>  -5182.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 18284</td>      <th>  BIC:               </th> <td>  -4611.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    72</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "           <td></td>             <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>          <td>    7.2126</td> <td>    0.041</td> <td>  176.642</td> <td> 0.000</td> <td>    7.133</td> <td>    7.293</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_sqft_living[0]</th> <td>    0.2663</td> <td>    0.003</td> <td>   79.423</td> <td> 0.000</td> <td>    0.260</td> <td>    0.273</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_sqft_living[1]</th> <td>    0.2663</td> <td>    0.003</td> <td>   79.423</td> <td> 0.000</td> <td>    0.260</td> <td>    0.273</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_grade</th>          <td>    0.8428</td> <td>    0.017</td> <td>   49.699</td> <td> 0.000</td> <td>    0.810</td> <td>    0.876</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>          <td>    0.0045</td> <td>    0.003</td> <td>    1.377</td> <td> 0.169</td> <td>   -0.002</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98001</th>          <td>   -0.3967</td> <td>    0.012</td> <td>  -33.468</td> <td> 0.000</td> <td>   -0.420</td> <td>   -0.373</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98002</th>          <td>   -0.3985</td> <td>    0.016</td> <td>  -25.034</td> <td> 0.000</td> <td>   -0.430</td> <td>   -0.367</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98003</th>          <td>   -0.3770</td> <td>    0.014</td> <td>  -27.111</td> <td> 0.000</td> <td>   -0.404</td> <td>   -0.350</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98004</th>          <td>    0.7707</td> <td>    0.013</td> <td>   59.397</td> <td> 0.000</td> <td>    0.745</td> <td>    0.796</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98005</th>          <td>    0.3685</td> <td>    0.017</td> <td>   21.575</td> <td> 0.000</td> <td>    0.335</td> <td>    0.402</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98006</th>          <td>    0.3051</td> <td>    0.011</td> <td>   29.002</td> <td> 0.000</td> <td>    0.284</td> <td>    0.326</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98007</th>          <td>    0.2564</td> <td>    0.019</td> <td>   13.337</td> <td> 0.000</td> <td>    0.219</td> <td>    0.294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98008</th>          <td>    0.3015</td> <td>    0.014</td> <td>   22.165</td> <td> 0.000</td> <td>    0.275</td> <td>    0.328</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98010</th>          <td>   -0.0765</td> <td>    0.023</td> <td>   -3.398</td> <td> 0.001</td> <td>   -0.121</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98011</th>          <td>    0.0498</td> <td>    0.017</td> <td>    3.016</td> <td> 0.003</td> <td>    0.017</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98014</th>          <td>   -0.0048</td> <td>    0.020</td> <td>   -0.239</td> <td> 0.811</td> <td>   -0.044</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98019</th>          <td>   -0.0703</td> <td>    0.016</td> <td>   -4.270</td> <td> 0.000</td> <td>   -0.103</td> <td>   -0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98022</th>          <td>   -0.2317</td> <td>    0.015</td> <td>  -15.209</td> <td> 0.000</td> <td>   -0.262</td> <td>   -0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98023</th>          <td>   -0.4218</td> <td>    0.010</td> <td>  -41.314</td> <td> 0.000</td> <td>   -0.442</td> <td>   -0.402</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98024</th>          <td>    0.1347</td> <td>    0.026</td> <td>    5.196</td> <td> 0.000</td> <td>    0.084</td> <td>    0.185</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98027</th>          <td>    0.1391</td> <td>    0.011</td> <td>   12.449</td> <td> 0.000</td> <td>    0.117</td> <td>    0.161</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98028</th>          <td>    0.0126</td> <td>    0.013</td> <td>    0.949</td> <td> 0.343</td> <td>   -0.013</td> <td>    0.039</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98029</th>          <td>    0.1735</td> <td>    0.012</td> <td>   13.942</td> <td> 0.000</td> <td>    0.149</td> <td>    0.198</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98030</th>          <td>   -0.3549</td> <td>    0.014</td> <td>  -24.676</td> <td> 0.000</td> <td>   -0.383</td> <td>   -0.327</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98031</th>          <td>   -0.3262</td> <td>    0.014</td> <td>  -23.914</td> <td> 0.000</td> <td>   -0.353</td> <td>   -0.299</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98032</th>          <td>   -0.4138</td> <td>    0.020</td> <td>  -20.786</td> <td> 0.000</td> <td>   -0.453</td> <td>   -0.375</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98033</th>          <td>    0.4147</td> <td>    0.011</td> <td>   37.433</td> <td> 0.000</td> <td>    0.393</td> <td>    0.436</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98034</th>          <td>    0.1451</td> <td>    0.010</td> <td>   14.775</td> <td> 0.000</td> <td>    0.126</td> <td>    0.164</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98038</th>          <td>   -0.2286</td> <td>    0.009</td> <td>  -24.340</td> <td> 0.000</td> <td>   -0.247</td> <td>   -0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98039</th>          <td>    1.0302</td> <td>    0.032</td> <td>   32.470</td> <td> 0.000</td> <td>    0.968</td> <td>    1.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98040</th>          <td>    0.5876</td> <td>    0.014</td> <td>   41.602</td> <td> 0.000</td> <td>    0.560</td> <td>    0.615</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98042</th>          <td>   -0.3181</td> <td>    0.010</td> <td>  -32.683</td> <td> 0.000</td> <td>   -0.337</td> <td>   -0.299</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98045</th>          <td>   -0.0311</td> <td>    0.015</td> <td>   -2.049</td> <td> 0.040</td> <td>   -0.061</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98052</th>          <td>    0.2325</td> <td>    0.010</td> <td>   24.428</td> <td> 0.000</td> <td>    0.214</td> <td>    0.251</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98053</th>          <td>    0.2148</td> <td>    0.011</td> <td>   19.099</td> <td> 0.000</td> <td>    0.193</td> <td>    0.237</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98055</th>          <td>   -0.2422</td> <td>    0.014</td> <td>  -17.259</td> <td> 0.000</td> <td>   -0.270</td> <td>   -0.215</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98056</th>          <td>   -0.0367</td> <td>    0.011</td> <td>   -3.258</td> <td> 0.001</td> <td>   -0.059</td> <td>   -0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98058</th>          <td>   -0.2199</td> <td>    0.011</td> <td>  -20.411</td> <td> 0.000</td> <td>   -0.241</td> <td>   -0.199</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98059</th>          <td>   -0.0392</td> <td>    0.011</td> <td>   -3.661</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98065</th>          <td>    0.0228</td> <td>    0.013</td> <td>    1.752</td> <td> 0.080</td> <td>   -0.003</td> <td>    0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98070</th>          <td>    0.1891</td> <td>    0.021</td> <td>    8.831</td> <td> 0.000</td> <td>    0.147</td> <td>    0.231</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98072</th>          <td>    0.1109</td> <td>    0.013</td> <td>    8.229</td> <td> 0.000</td> <td>    0.084</td> <td>    0.137</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98074</th>          <td>    0.1718</td> <td>    0.011</td> <td>   15.295</td> <td> 0.000</td> <td>    0.150</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98075</th>          <td>    0.2199</td> <td>    0.012</td> <td>   18.214</td> <td> 0.000</td> <td>    0.196</td> <td>    0.244</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98077</th>          <td>    0.1221</td> <td>    0.016</td> <td>    7.493</td> <td> 0.000</td> <td>    0.090</td> <td>    0.154</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98092</th>          <td>   -0.3498</td> <td>    0.012</td> <td>  -29.184</td> <td> 0.000</td> <td>   -0.373</td> <td>   -0.326</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98102</th>          <td>    0.5627</td> <td>    0.023</td> <td>   24.943</td> <td> 0.000</td> <td>    0.519</td> <td>    0.607</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98103</th>          <td>    0.4108</td> <td>    0.009</td> <td>   43.948</td> <td> 0.000</td> <td>    0.392</td> <td>    0.429</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98105</th>          <td>    0.5707</td> <td>    0.015</td> <td>   38.692</td> <td> 0.000</td> <td>    0.542</td> <td>    0.600</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98106</th>          <td>   -0.0598</td> <td>    0.012</td> <td>   -4.809</td> <td> 0.000</td> <td>   -0.084</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98107</th>          <td>    0.4254</td> <td>    0.014</td> <td>   30.410</td> <td> 0.000</td> <td>    0.398</td> <td>    0.453</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98108</th>          <td>   -0.0496</td> <td>    0.016</td> <td>   -3.072</td> <td> 0.002</td> <td>   -0.081</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98109</th>          <td>    0.5913</td> <td>    0.021</td> <td>   27.891</td> <td> 0.000</td> <td>    0.550</td> <td>    0.633</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98112</th>          <td>    0.6481</td> <td>    0.014</td> <td>   47.413</td> <td> 0.000</td> <td>    0.621</td> <td>    0.675</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98115</th>          <td>    0.4205</td> <td>    0.009</td> <td>   44.291</td> <td> 0.000</td> <td>    0.402</td> <td>    0.439</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98116</th>          <td>    0.3811</td> <td>    0.012</td> <td>   30.930</td> <td> 0.000</td> <td>    0.357</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98117</th>          <td>    0.4112</td> <td>    0.010</td> <td>   42.369</td> <td> 0.000</td> <td>    0.392</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98118</th>          <td>    0.0892</td> <td>    0.010</td> <td>    8.734</td> <td> 0.000</td> <td>    0.069</td> <td>    0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98119</th>          <td>    0.5833</td> <td>    0.017</td> <td>   34.968</td> <td> 0.000</td> <td>    0.551</td> <td>    0.616</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98122</th>          <td>    0.3868</td> <td>    0.013</td> <td>   29.415</td> <td> 0.000</td> <td>    0.361</td> <td>    0.413</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98125</th>          <td>    0.1801</td> <td>    0.011</td> <td>   16.130</td> <td> 0.000</td> <td>    0.158</td> <td>    0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98126</th>          <td>    0.1764</td> <td>    0.012</td> <td>   14.733</td> <td> 0.000</td> <td>    0.153</td> <td>    0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98133</th>          <td>    0.0562</td> <td>    0.010</td> <td>    5.456</td> <td> 0.000</td> <td>    0.036</td> <td>    0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98136</th>          <td>    0.3210</td> <td>    0.014</td> <td>   23.274</td> <td> 0.000</td> <td>    0.294</td> <td>    0.348</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98144</th>          <td>    0.2872</td> <td>    0.012</td> <td>   23.325</td> <td> 0.000</td> <td>    0.263</td> <td>    0.311</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98146</th>          <td>   -0.0629</td> <td>    0.013</td> <td>   -4.661</td> <td> 0.000</td> <td>   -0.089</td> <td>   -0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98148</th>          <td>   -0.2507</td> <td>    0.028</td> <td>   -8.807</td> <td> 0.000</td> <td>   -0.306</td> <td>   -0.195</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98155</th>          <td>    0.0581</td> <td>    0.011</td> <td>    5.357</td> <td> 0.000</td> <td>    0.037</td> <td>    0.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98166</th>          <td>   -0.0086</td> <td>    0.014</td> <td>   -0.611</td> <td> 0.542</td> <td>   -0.036</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98168</th>          <td>   -0.2925</td> <td>    0.014</td> <td>  -21.143</td> <td> 0.000</td> <td>   -0.320</td> <td>   -0.265</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98177</th>          <td>    0.2396</td> <td>    0.014</td> <td>   16.827</td> <td> 0.000</td> <td>    0.212</td> <td>    0.268</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98178</th>          <td>   -0.2001</td> <td>    0.014</td> <td>  -14.337</td> <td> 0.000</td> <td>   -0.227</td> <td>   -0.173</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98188</th>          <td>   -0.3000</td> <td>    0.019</td> <td>  -15.744</td> <td> 0.000</td> <td>   -0.337</td> <td>   -0.263</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98198</th>          <td>   -0.2776</td> <td>    0.014</td> <td>  -20.373</td> <td> 0.000</td> <td>   -0.304</td> <td>   -0.251</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zip_98199</th>          <td>    0.4793</td> <td>    0.013</td> <td>   37.123</td> <td> 0.000</td> <td>    0.454</td> <td>    0.505</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>2095.792</td> <th>  Durbin-Watson:     </th> <td>   2.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>9180.979</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 0.493</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 6.321</td>  <th>  Cond. No.          </th> <td>1.74e+17</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 7.49e-29. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:              log_price   R-squared:                       0.841\n",
       "Model:                            OLS   Adj. R-squared:                  0.840\n",
       "Method:                 Least Squares   F-statistic:                     1338.\n",
       "Date:                Fri, 19 Apr 2019   Prob (F-statistic):               0.00\n",
       "Time:                        10:56:41   Log-Likelihood:                 2664.0\n",
       "No. Observations:               18357   AIC:                            -5182.\n",
       "Df Residuals:                   18284   BIC:                            -4611.\n",
       "Df Model:                          72                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "======================================================================================\n",
       "                         coef    std err          t      P>|t|      [0.025      0.975]\n",
       "--------------------------------------------------------------------------------------\n",
       "Intercept              7.2126      0.041    176.642      0.000       7.133       7.293\n",
       "log_sqft_living[0]     0.2663      0.003     79.423      0.000       0.260       0.273\n",
       "log_sqft_living[1]     0.2663      0.003     79.423      0.000       0.260       0.273\n",
       "log_grade              0.8428      0.017     49.699      0.000       0.810       0.876\n",
       "bathrooms              0.0045      0.003      1.377      0.169      -0.002       0.011\n",
       "zip_98001             -0.3967      0.012    -33.468      0.000      -0.420      -0.373\n",
       "zip_98002             -0.3985      0.016    -25.034      0.000      -0.430      -0.367\n",
       "zip_98003             -0.3770      0.014    -27.111      0.000      -0.404      -0.350\n",
       "zip_98004              0.7707      0.013     59.397      0.000       0.745       0.796\n",
       "zip_98005              0.3685      0.017     21.575      0.000       0.335       0.402\n",
       "zip_98006              0.3051      0.011     29.002      0.000       0.284       0.326\n",
       "zip_98007              0.2564      0.019     13.337      0.000       0.219       0.294\n",
       "zip_98008              0.3015      0.014     22.165      0.000       0.275       0.328\n",
       "zip_98010             -0.0765      0.023     -3.398      0.001      -0.121      -0.032\n",
       "zip_98011              0.0498      0.017      3.016      0.003       0.017       0.082\n",
       "zip_98014             -0.0048      0.020     -0.239      0.811      -0.044       0.035\n",
       "zip_98019             -0.0703      0.016     -4.270      0.000      -0.103      -0.038\n",
       "zip_98022             -0.2317      0.015    -15.209      0.000      -0.262      -0.202\n",
       "zip_98023             -0.4218      0.010    -41.314      0.000      -0.442      -0.402\n",
       "zip_98024              0.1347      0.026      5.196      0.000       0.084       0.185\n",
       "zip_98027              0.1391      0.011     12.449      0.000       0.117       0.161\n",
       "zip_98028              0.0126      0.013      0.949      0.343      -0.013       0.039\n",
       "zip_98029              0.1735      0.012     13.942      0.000       0.149       0.198\n",
       "zip_98030             -0.3549      0.014    -24.676      0.000      -0.383      -0.327\n",
       "zip_98031             -0.3262      0.014    -23.914      0.000      -0.353      -0.299\n",
       "zip_98032             -0.4138      0.020    -20.786      0.000      -0.453      -0.375\n",
       "zip_98033              0.4147      0.011     37.433      0.000       0.393       0.436\n",
       "zip_98034              0.1451      0.010     14.775      0.000       0.126       0.164\n",
       "zip_98038             -0.2286      0.009    -24.340      0.000      -0.247      -0.210\n",
       "zip_98039              1.0302      0.032     32.470      0.000       0.968       1.092\n",
       "zip_98040              0.5876      0.014     41.602      0.000       0.560       0.615\n",
       "zip_98042             -0.3181      0.010    -32.683      0.000      -0.337      -0.299\n",
       "zip_98045             -0.0311      0.015     -2.049      0.040      -0.061      -0.001\n",
       "zip_98052              0.2325      0.010     24.428      0.000       0.214       0.251\n",
       "zip_98053              0.2148      0.011     19.099      0.000       0.193       0.237\n",
       "zip_98055             -0.2422      0.014    -17.259      0.000      -0.270      -0.215\n",
       "zip_98056             -0.0367      0.011     -3.258      0.001      -0.059      -0.015\n",
       "zip_98058             -0.2199      0.011    -20.411      0.000      -0.241      -0.199\n",
       "zip_98059             -0.0392      0.011     -3.661      0.000      -0.060      -0.018\n",
       "zip_98065              0.0228      0.013      1.752      0.080      -0.003       0.048\n",
       "zip_98070              0.1891      0.021      8.831      0.000       0.147       0.231\n",
       "zip_98072              0.1109      0.013      8.229      0.000       0.084       0.137\n",
       "zip_98074              0.1718      0.011     15.295      0.000       0.150       0.194\n",
       "zip_98075              0.2199      0.012     18.214      0.000       0.196       0.244\n",
       "zip_98077              0.1221      0.016      7.493      0.000       0.090       0.154\n",
       "zip_98092             -0.3498      0.012    -29.184      0.000      -0.373      -0.326\n",
       "zip_98102              0.5627      0.023     24.943      0.000       0.519       0.607\n",
       "zip_98103              0.4108      0.009     43.948      0.000       0.392       0.429\n",
       "zip_98105              0.5707      0.015     38.692      0.000       0.542       0.600\n",
       "zip_98106             -0.0598      0.012     -4.809      0.000      -0.084      -0.035\n",
       "zip_98107              0.4254      0.014     30.410      0.000       0.398       0.453\n",
       "zip_98108             -0.0496      0.016     -3.072      0.002      -0.081      -0.018\n",
       "zip_98109              0.5913      0.021     27.891      0.000       0.550       0.633\n",
       "zip_98112              0.6481      0.014     47.413      0.000       0.621       0.675\n",
       "zip_98115              0.4205      0.009     44.291      0.000       0.402       0.439\n",
       "zip_98116              0.3811      0.012     30.930      0.000       0.357       0.405\n",
       "zip_98117              0.4112      0.010     42.369      0.000       0.392       0.430\n",
       "zip_98118              0.0892      0.010      8.734      0.000       0.069       0.109\n",
       "zip_98119              0.5833      0.017     34.968      0.000       0.551       0.616\n",
       "zip_98122              0.3868      0.013     29.415      0.000       0.361       0.413\n",
       "zip_98125              0.1801      0.011     16.130      0.000       0.158       0.202\n",
       "zip_98126              0.1764      0.012     14.733      0.000       0.153       0.200\n",
       "zip_98133              0.0562      0.010      5.456      0.000       0.036       0.076\n",
       "zip_98136              0.3210      0.014     23.274      0.000       0.294       0.348\n",
       "zip_98144              0.2872      0.012     23.325      0.000       0.263       0.311\n",
       "zip_98146             -0.0629      0.013     -4.661      0.000      -0.089      -0.036\n",
       "zip_98148             -0.2507      0.028     -8.807      0.000      -0.306      -0.195\n",
       "zip_98155              0.0581      0.011      5.357      0.000       0.037       0.079\n",
       "zip_98166             -0.0086      0.014     -0.611      0.542      -0.036       0.019\n",
       "zip_98168             -0.2925      0.014    -21.143      0.000      -0.320      -0.265\n",
       "zip_98177              0.2396      0.014     16.827      0.000       0.212       0.268\n",
       "zip_98178             -0.2001      0.014    -14.337      0.000      -0.227      -0.173\n",
       "zip_98188             -0.3000      0.019    -15.744      0.000      -0.337      -0.263\n",
       "zip_98198             -0.2776      0.014    -20.373      0.000      -0.304      -0.251\n",
       "zip_98199              0.4793      0.013     37.123      0.000       0.454       0.505\n",
       "==============================================================================\n",
       "Omnibus:                     2095.792   Durbin-Watson:                   2.005\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             9180.979\n",
       "Skew:                           0.493   Prob(JB):                         0.00\n",
       "Kurtosis:                       6.321   Cond. No.                     1.74e+17\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 7.49e-29. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 169112.80937169204\n",
      "MAE: 85731.52759803236\n",
      "\n"
     ]
    }
   ],
   "source": [
    "predictors = ['log_sqft_living', 'log_sqft_living', 'log_grade', 'bathrooms'] + zip_predictors\n",
    "feat_to_model_kfold_eval('log_price', predictors, df, \n",
    "                        kvals=[5, 10, 20], show_summary=True, price_logged=True, MAE=True, return_items=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'how far off the model estimated')"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(df.price, resids[len(df):2*len(df)], c='green', alpha=0.3)\n",
    "plt.xlabel('price of home')\n",
    "plt.ylabel('how far off the model estimated')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "learn-env",
   "language": "python",
   "name": "learn-env"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
